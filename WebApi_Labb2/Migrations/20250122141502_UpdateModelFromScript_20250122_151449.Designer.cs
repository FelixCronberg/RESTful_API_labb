// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi_Labb2.Models;

#nullable disable

namespace WebApi_Labb2.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20250122141502_UpdateModelFromScript_20250122_151449")]
    partial class UpdateModelFromScript_20250122_151449
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("WebApi_Labb2.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("AuthorId");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("WebApi_Labb2.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("BookId");

                    b.ToTable("Book", null, t =>
                        {
                            t.HasCheckConstraint("CK_Book_Rating", "[Rating] > 0 AND [Rating] < 10");

                            t.HasCheckConstraint("CK_Book_ReleaseYear", "[ReleaseYear] > 0 AND [ReleaseYear] < 2500");
                        });
                });

            modelBuilder.Entity("WebApi_Labb2.Models.Loan", b =>
                {
                    b.Property<int>("LoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("LoanCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smalldatetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("LoanId");

                    b.HasIndex("BookId");

                    b.HasIndex("LoanCardId");

                    b.ToTable("Loan", (string)null);
                });

            modelBuilder.Entity("WebApi_Labb2.Models.LoanCard", b =>
                {
                    b.Property<int>("LoanCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanCardId"));

                    b.Property<DateOnly>("ExpirationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("DATEADD(YEAR, 5, GETDATE())");

                    b.Property<DateOnly>("IssueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("LoanCardOwnerId")
                        .HasColumnType("int");

                    b.HasKey("LoanCardId");

                    b.HasIndex("LoanCardOwnerId")
                        .IsUnique();

                    b.ToTable("LoanCard", (string)null);
                });

            modelBuilder.Entity("WebApi_Labb2.Models.LoanCardOwner", b =>
                {
                    b.Property<int>("LoanCardOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanCardOwnerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("LoanCardOwnerId");

                    b.ToTable("LoanCardOwner", (string)null);
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("WebApi_Labb2.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi_Labb2.Models.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi_Labb2.Models.Loan", b =>
                {
                    b.HasOne("WebApi_Labb2.Models.Book", "Book")
                        .WithMany("TimesLoaned")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi_Labb2.Models.LoanCard", "LoanCard")
                        .WithMany("Loans")
                        .HasForeignKey("LoanCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("LoanCard");
                });

            modelBuilder.Entity("WebApi_Labb2.Models.LoanCard", b =>
                {
                    b.HasOne("WebApi_Labb2.Models.LoanCardOwner", "LoanCardOwner")
                        .WithOne("LoanCard")
                        .HasForeignKey("WebApi_Labb2.Models.LoanCard", "LoanCardOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanCardOwner");
                });

            modelBuilder.Entity("WebApi_Labb2.Models.Book", b =>
                {
                    b.Navigation("TimesLoaned");
                });

            modelBuilder.Entity("WebApi_Labb2.Models.LoanCard", b =>
                {
                    b.Navigation("Loans");
                });

            modelBuilder.Entity("WebApi_Labb2.Models.LoanCardOwner", b =>
                {
                    b.Navigation("LoanCard");
                });
#pragma warning restore 612, 618
        }
    }
}
